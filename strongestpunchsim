return(function(W1,B1,A1,E1,l1,K1,O1,b1,r1,s1,c1,o1,R1,Y1,U1,H1,D1,I1,v1,T1,j1,t1,w1,f1,x1,V1,N1,J1,y1,i1,d1,F1,M1,k1,n1,u1,G1,L,...)local a,C=nil,nil;local Q,Z,m,q1=o1,pcall,tostring,0;repeat if q1~=0 then C=E1;q1=0x2;else do a=G1.sub;end;q1=0X00001;end;until q1>=0X2;local e=({[5]=0,[0X2]=s1,[A1]=0X53C67415,[0x004]=0.0586609242633882,[n1]=r1,[0x1]=6,[0x8]=0X003,[0X0003]=5,[8]=7,[0X4]=N1,[0X6]=0X2,[7]=3,[0X04]=J1,[2]=2,[4]=1});q1=5;local M,t,G,h,s,r=nil,nil,nil,nil,nil,nil;do repeat do if q1<=0X2 then if not(q1<=0X000)then if q1==0x1 then do h=H1;end;q1=0X00003;continue;else t=F1;do q1=0X0004;end;end;else r=Y1;do q1=6;end;end;elseif q1<=3 then s=K1;q1=0X0;else if q1~=0X4 thenq1=2;else G=string.rep;q1=1;continue;end;end;end;until q1>=0x0006;end;local z=(tonumber);q1=3;local F,K,y,o,w,l=nil,nil,nil,nil,nil,(nil);do while q1<=0X6 do if q1<=0X2 then if not(q1<=0)then if q1==1 then K=x1;do q1=0X6;end;else q1=0X00007;continue;end;else o=w1;q1=0X5;end;else if q1<=0X4 then do if q1~=3 then l=w();q1=2;do continue;end;else do F=y1;end;q1=1;end;end;else if q1==0X5 then w=l1;q1=0X004;continue;else y=G1.unpack;do q1=0;end;continue;end;end;end;end;end;q1=0X0a;local E,V,g,B,k,d,D,z1,f,H=nil,nil,nil,nil,nil,nil,nil,nil,nil,(nil);while q1<=10 do do if q1<=4 then do if not(q1<=0X01)then if q1<=0X2 then M=E(a(M,5),"..",function(Ew)do if h(Ew,2)==0X00048 then local Fz=0X01;while(true)do if Fz==0 then return'';else do B=z(a(Ew,1,1));end;Fz=0x0;do continue;end;end;end;else local EX=(nil);do for FX=0,0X0001 do if FX==0X000 then EX=o(z(Ew,16));continue;else if B then local Bz=(1);local kz=nil;repeat if not(Bz<=0X0)then if Bz==0X1 then kz=G(EX,B);Bz=2;else do B=nil;end;Bz=0;do continue;end;end;else return kz;end;until(false);else do return EX;end;end;continue;end;end;end;end;end;end);q1=0x003;do continue;end;else if q1==0X00003 then k=M1.band;q1=0X01;continue;else do f=function()local Vn,Hn=nil,(nil);local hn=(0X02);while(true)do if not(hn<=0)then if hn==0X1 then V=Hn;do hn=0;end;else Vn,Hn=y("<I4",M,V);hn=1;end;else return Vn;end;end;end;end;do q1=0;end;end;end;else do if q1~=0 then d=function()local Ap=0x1;local Lp=nil;do while(true)do do if not(Ap<=0)then if Ap~=0x01 then V=V+1;Ap=0X0000;do continue;end;else Lp=h(M,V,V);Ap=0X00002;end;else do return Lp;end;end;end;end;end;end;q1=5;else do H=coroutine.wrap;end;q1=0xb;end;end;end;end;else if q1<=0x07 then do if not(q1<=5)then if q1==6 then q1=0X02;else g=V1;q1=6;continue;end;else D=4294967296;q1=9;end;end;else if not(q1<=8)then do if q1~=9 then do E=string.gsub;end;q1=8;else z1=function(...)return Q("#",...),{...};end;q1=0X4;continue;end;end;else V=1;do q1=0X0007;end;continue;end;end;end;end;end;local Y=B1;q1=4;local W,I,b,A,u=nil,nil,nil,nil,nil;while q1~=0X6 do do if not(q1<=2)then if q1<=0X3 then u={[0]=0X1};q1=0X0;continue;elseif q1==4 then W=2147483648;q1=0X2;do continue;end;else b=W-1;q1=0X1;continue;end;else if not(q1<=0x0000)then if q1~=0X1 then I=2^52;q1=0X00005;else do A=d1;end;q1=3;do continue;end;end;else do local jI=0X2;for Ih=A1,0X001F do local Ch=0;while Ch<2 do if Ch==0 then u[Ih]=jI;Ch=1;do continue;end;else jI=jI*0X002;Ch=2;end;end;end;end;q1=0X6;continue;end;end;end;end;q1=0X0;local v,c=nil,nil;while q1<=0X01 do do if q1==0 then v=function()local DO=0;local sO,iO=nil,(nil);repeat do if not(DO<=0)then if DO==0X1 then return sO;else V=iO;DO=1;continue;end;else sO,iO=y('\060\i8',M,V);DO=0x2;end;end;until false;end;q1=1;else c=M1.bxor;q1=2;continue;end;end;end;local J=(rawset);local x=(setfenv);local U=(f1);local T=(D1);local j=(D-0X1);local i=(W1);local R=(function()local dO,eO=y("\<\100",M,V);V=eO;return dO;end);do q1=0X0;end;local q,m1,X,S=nil,nil,nil,nil;repeat do if not(q1<=0X01)then do if q1==0x2 then S=I1;break;else m1={};q1=1;continue;end;end;else do if q1~=0 then do X=function()local K5,a5=0X0,0x00;repeat local qV=(h(M,V,V));V=V+0X1;a5=U(a5,i(k(qV,127),K5));if k(qV,0X00080)~=0x0000 then else return a5;end;K5=K5+7;until false;end;end;do q1=0X2;end;do continue;end;else q={0x07,4,6};q1=0X3;continue;end;end;end;end;until false;local p=d();local L1=(d());local S1=(function(IA)local uA,TA,XA=nil,nil,(nil);for uk=0X0000,2 do if not(uk<=0X0)then if uk==1 then TA=c(uA[0X1],L1);do continue;end;else XA=c(uA[0X2],L1);end;else uA={h(M,V,V+0X0003)};continue;end;end;local DA=c(uA[0X003],L1);local mA=(c(uA[j1],L1));L1=(209*L1+IA)%b1;V=V+4;return mA*0X001000000+DA*65536+XA*0X100+TA;end);local N=(rawget);q1=2;local Q1,Z1,O=nil,nil,(nil);while'\119\q\069\057\W'do if q1<=0 then do Z1={};end;do q1=1;end;else if q1==1 then O=function(yq,Pq,Qq)local Tq=((yq/u[Pq])%u[Qq]);Tq=Tq-Tq%0X1;return Tq;end;break;else do Q1=function(Lh)local dh,Uh=nil,(nil);local ah=(0X2);repeat if ah<=0X1 then do if ah~=0X00000 then return Uh;else do V=V+dh;end;ah=1;end;end;else if not(ah<=0X2)then if ah~=0X03 then Uh="";ah=0X3;else for Zq=A1,dh,7997 do local Aq,yq,zq=1,nil,nil;repeat if not(Aq<=1)then if Aq<=0X02 then Uh=Uh..o(Y(zq));Aq=5;continue;else if Aq==3 then if yq>dh then do yq=dh;end;end;do Aq=0;end;continue;else for Ac=1,#zq do local oc=(0x0);while oc<0x2 do if oc~=0x0 then do p=(Lh*p+0X00001F)%0X100;end;oc=0X002;else zq[Ac]=c(zq[Ac],p);oc=0x1;end;end;end;Aq=0X002;end;end;else if Aq==0X0 then zq={h(M,V+Zq-0X1,V+yq-1)};Aq=4;continue;else yq=Zq+0x1F3D-0X1;Aq=0X3;continue;end;end;until Aq==0X00005;end;ah=0;end;else dh=f();ah=0x00004;do continue;end;end;end;until(false);end;end;q1=0;end;end;end;local P=(function()local Sw=(nil);local Jw=2;repeat if not(Jw<=0X0)then if Jw==1 then if Sw>b then return Sw-D;end;Jw=0;else Sw=X();do Jw=1;end;end;else return Sw;end;until(false);end);local g1=0X0001;local function C1(P1,e1,p1)local bF,IF,HF,eF=e1[0X8],e1[1],e1[3],e1[0X4];local X1,AF,FF,EF=e1[0X7],e1[9],e1[6],e1[0X0005];local UF=r({},{__mode="v"});local MF=nil;MF=function(...)local u_,D_=0X0,({});local f_=w();local Z_={[2]=e1,[1]=D_};local T_=(f_==l and p1 or f_);local s_,M_=z1(...);s_=s_-0X1;local Y_=0X001;for YQ=0X0000,s_ do do if not(FF>YQ)then break;else D_[YQ]=M_[YQ+0X1];end;end;end;if not IF then M_=nil;else if not(HF)then else(D_)[FF]={n=s_>=FF and s_-FF+1 or 0,Y(M_,FF+0X001,s_+0X1)};end;end;if T_==f_ then else(x)(MF,T_);end;while-0X63ab30F2 do local OA=(X1[Y_]);local aA=(OA[0X5]);Y_=Y_+1;if not(aA<46)then do if not(aA>=0x45)then if aA>=57 then if aA<63 then do if not(aA<0X0003C)then if aA>=61 then if aA==62 then do D_[OA[0X4]]=D_[OA[7]][OA[0X2]];end;else local Bx=OA[4];local lx,Ix=D_[Bx],((OA[6]-0X0001)*0X32);for Mw=0X1,u_-Bx do(lx)[Ix+Mw]=D_[Bx+Mw];end;end;else(D_)[OA[4]]=true;end;else do if aA>=58 then if aA==0x3B then local SF=OA[0x4];D_[SF](D_[SF+0X0001],D_[SF+0x2]);do u_=SF-0X1;end;else(D_)[OA[0X4]]=D_[OA[0x7]]-D_[OA[0X6]];end;else if OA[6]~=135 then repeat local xx,Mx=UF,(D_);if not(#xx>0x0)then else local Sz=({});for S0,r0 in F,xx do for QV,JV in F,r0 do if not(JV[1]==Mx and JV[0X0002]>=0X0)then else local ZF=(JV[2]);if not Sz[ZF]then(Sz)[ZF]={Mx[ZF]};end;(JV)[0X1]=Sz[ZF];JV[2]=0X1;end;end;end;end;until true;return;else Y_=Y_-0X0001;X1[Y_]={[0X0007]=(OA[0X00007]-165),[5]=39,[4]=(OA[0X0004]-0XA5)};end;end;end;end;end;else if not(aA<66)then do if not(aA>=67)then(D_)[OA[0x4]]=T(D_[OA[7]],D_[OA[6]]);else if aA==68 then do if not(not(D_[OA[7]]<D_[OA[6]]))then else do Y_=OA[4];end;end;end;else local gY=(OA[4]);local qY,NY=D_[gY]();if qY then Y_=OA[7];(D_)[gY+0X3]=NY;end;end;end;end;else if not(aA>=64)then local kD=(OA[0x0007]);do(D_)[OA[4]]=D_[kD]..D_[kD+1];end;else do if aA==65 then D_[OA[0X4]]=D_[OA[7]]>D_[OA[0X6]];else local Qm=OA[0X4];(D_[Qm])(D_[Qm+0x1]);u_=Qm-1;end;end;end;end;end;elseif not(aA<0X33)then if aA>=0X00036 then if aA>=0x37 then do if aA==56 then D_[OA[0X00004]]=D_[OA[0X00007]]/D_[OA[0X0006]];else repeat local Kv,Qv=UF,(D_);if#Kv>0X0 then local Zs={};for ME,xE in F,Kv do for Iv,Yv in F,xE do if Yv[0X1]==Qv and Yv[2]>=0x0 then local Kj=(Yv[0x2]);if not(not Zs[Kj])then else Zs[Kj]={Qv[Kj]};end;Yv[0X1]=Zs[Kj];Yv[2]=1;end;end;end;end;until true;local mV=OA[0X04];return D_[mV](Y(D_,mV+1,u_));end;end;else do D_[OA[0x4]]=c(D_[OA[7]],D_[OA[6]]);end;end;else if not(aA<0X34)then if aA~=0X00035 then if OA[0X0006]==178 then Y_=Y_-0X1;(X1)[Y_]={[4]=(OA[0X4]-106),[7]=(OA[0x7]-0X6a),[0X0005]=0X00002a};elseif OA[6]~=0X000be then if not(not D_[OA[4]])then else Y_=OA[7];end;else Y_=Y_-1;(X1)[Y_]={[5]=0X48,[4]=(OA[0x4]-238),[0X7]=(OA[7]-0XeE)};end;else if OA[0x6]~=248 then local iU=(OA[0X4]);for QR=iU,iU+(OA[7]-0X1)do D_[QR]=M_[FF+(QR-iU)+1];end;else Y_=Y_-1;do(X1)[Y_]={[0X5]=0X23,[0X00004]=(OA[4]-52),[0X7]=(OA[0X0007]-0x34)};end;end;end;else local f3=OA[0X4];u_=f3+OA[0X007]-0X1;D_[f3]=D_[f3](Y(D_,f3+1,u_));u_=f3;end;end;else if not(aA>=0x000030)then if aA==47 then do(D_)[OA[0x4]]=U(D_[OA[7]],D_[OA[0X6]]);end;else if D_[OA[7]]==OA[2]then else do Y_=OA[4];end;end;end;else if aA>=49 then do if aA~=50 then local Ke=(OA[0X04]);local pe,Ee=D_[Ke]();if pe then for QK=0X001,OA[6]do(D_)[Ke+QK]=Ee[QK];end;do Y_=OA[7];end;end;else local ye=OA[0X0004];local me,ge=D_[ye]();if not(me)then else(D_)[ye+0x1]=ge;Y_=OA[0X07];end;end;end;else local cD=P1[OA[7]];D_[OA[4]]=cD[1][cD[0X00002]];end;end;end;else do if not(aA>=81)then if aA>=0X4b then do if aA>=78 then do if aA<0X4f then do D_[OA[4]]={};end;else if aA~=0X50 then do D_[OA[0X0004]]=OA[0X0003];end;else local J2=(OA[4]);local H2=((OA[0X6]-0X1)*0x32);local Q2=D_[J2];for W7=0x01,OA[7]do do Q2[H2+W7]=D_[J2+W7];end;end;end;end;end;else if not(aA<76)then do if aA~=0x4D then local gm=OA[0X0007];local jm=D_[gm];for px=gm+0x1,OA[6]do jm=jm..D_[px];end;(D_)[OA[4]]=jm;else do D_[OA[4]]=D_[OA[7]]==D_[OA[0X6]];end;end;end;else local fi=(D_[OA[7]]/D_[OA[0X6]]);D_[OA[0X4]]=fi-fi%0X001;end;end;end;else do if aA>=72 then if aA<0X49 then if OA[0X6]~=93 then do D_[OA[4]]=-D_[OA[0X7]];end;else do Y_=Y_-0X1;end;(X1)[Y_]={[4]=(OA[0x4]-206),[0X07]=(OA[7]-206),[5]=42};end;else if aA~=74 then local cB=(OA[0x6]);local sB,CB=OA[4],OA[7];if CB~=0X0000 then u_=sB+CB-0X1;end;local mB,AB=nil,(nil);if CB==1 then mB,AB=z1(D_[sB]());else mB,AB=z1(D_[sB](Y(D_,sB+1,u_)));end;do if cB~=0x01 then if cB~=0X0 then mB=sB+cB-0X2;do u_=mB+0x1;end;else mB=mB+sB-0x1;do u_=mB;end;end;local Pa=0;for FK=sB,mB do Pa=Pa+0X1;(D_)[FK]=AB[Pa];end;else u_=sB-1;end;end;else if not(not(D_[OA[7]]<=OA[2]))then else Y_=OA[4];end;end;end;else if not(aA<70)then if aA~=71 then local vF=(OA[4]);local hF=(H(function(...)K();for bg,pg,Cg,cg,ig,yg,Pg,eg,Bg,Ng in...do K(true,{bg,pg,Cg,cg,ig,yg,Pg,eg,Bg,Ng});end;end));hF(D_[vF],D_[vF+1],D_[vF+2]);do u_=vF;end;D_[vF]=hF;Y_=OA[0X7];else if not(D_[OA[7]]<=D_[OA[6]])then Y_=OA[0x4];end;end;else if not(D_[OA[4]])then else Y_=OA[7];end;end;end;end;end;else do if not(aA>=0x57)then if aA>=0X000054 then do if not(aA>=0X0055)then D_[OA[0X04]]=k(D_[OA[7]],D_[OA[6]]);else if aA~=86 then do u_=OA[0X04];end;D_[u_]=D_[u_]();else local tp=(OA[0X004]);local Up=(H(function(...)(K)();do for jS in...do(K)(true,jS);end;end;end));Up(D_[tp],D_[tp+1],D_[tp+2]);u_=tp;D_[tp]=Up;Y_=OA[7];end;end;end;else if aA>=82 then do if aA~=83 then local Ov=(OA[4]);(D_)[Ov]=D_[Ov](D_[Ov+1],D_[Ov+2]);do u_=Ov;end;else(D_)[OA[4]]=D_[OA[7]]>=D_[OA[0X6]];end;end;else(D_)[OA[0X4]]=Z_[OA[7]];end;end;else do if aA<0X5a then if not(aA>=88)then D_[OA[0X00004]]=D_[OA[0X7]]%OA[2];else do if aA~=0X59 then local EZ=OA[0X004];local mZ=(D_[EZ+2]);local xZ,RZ=D_[EZ],D_[EZ+1];(D_)[EZ]=H(function()do for Bv=xZ,RZ,mZ do(K)(true,Bv);end;end;end);Y_=OA[7];else if OA[0X6]~=0X2E then do(D_)[OA[0x4]]=not D_[OA[0X7]];end;else Y_=Y_-1;do X1[Y_]={[7]=(OA[7]-0X00D7),[4]=(OA[0X4]-0X00D7),[5]=39};end;end;end;end;end;else do if aA>=0X5b then if aA==92 then local B0=OA[0X7];local F0=(OA[0X4]);do u_=F0+B0-1;end;repeat local yG,AG=UF,(D_);if#yG>0x0 then local Rq=({});do for wk,kk in F,yG do for ar,ir in F,kk do if ir[1]==AG and ir[2]>=0 then local D9=ir[0X2];if not(not Rq[D9])then else do(Rq)[D9]={AG[D9]};end;end;ir[1]=Rq[D9];do ir[2]=0x1;end;end;end;end;end;end;until"\108\085";do return D_[F0](Y(D_,F0+0X1,u_));end;else do(D_[OA[4]])[D_[OA[0X007]]]=D_[OA[6]];end;end;else do(D_)[OA[4]]=m1[OA[0X0007]];end;end;end;end;end;end;end;end;end;end;end;else do if not(aA<0x0017)then if not(aA>=34)then do if not(aA>=0X001c)then if not(aA<0X000019)then if not(aA<26)then if aA==0X00001B then local c8,a8=OA[0X004],D_[OA[7]];(D_)[c8+0X0001]=a8;(D_)[c8]=a8[OA[0x2]];else local la=(OA[0X4]);local Qa=H(function(...)(K)();for Yb,Lb in...do(K)(true,Yb,Lb);end;end);Qa(D_[la],D_[la+0x0001],D_[la+0X02]);u_=la;(D_)[la]=Qa;Y_=OA[0x7];end;else(m1)[OA[0X7]]=D_[OA[4]];end;else do if aA~=0X18 then D_[OA[4]]=D_[OA[7]]<D_[OA[6]];else do if not(not(OA[3]<=D_[OA[6]]))then else Y_=OA[4];end;end;end;end;end;else if aA>=0X00001F then if not(aA>=0X0020)then local Jh=P1[OA[0X00007]];Jh[0X00001][Jh[0X2]]=D_[OA[4]];elseif aA==0X21 then do(D_)[OA[0X00004]]=D_[OA[7]][D_[OA[0x6]]];end;else do(D_[OA[4]])[OA[0X00003]]=OA[2];end;end;else do if aA>=29 then if aA~=0X1E then(D_)[OA[0X4]]=T_[OA[3]];else do(D_)[OA[4]]=t(D_[OA[7]]);end;end;else do repeat local E2,L2=UF,(D_);if not(#E2>0)then else local dA=({});do for mz,az in F,E2 do for hv,Bv in F,az do if not(Bv[0X1]==L2 and Bv[0X002]>=0)then else local rz=(Bv[2]);if not dA[rz]then do dA[rz]={L2[rz]};end;end;do(Bv)[1]=dA[rz];end;do Bv[0x0002]=1;end;end;end;end;end;end;until 0x47EBB61d;end;return D_[OA[4]]();end;end;end;end;end;else if aA<40 then if aA>=0X000025 then do if not(aA<38)then if aA~=39 then do if D_[OA[7]]~=D_[OA[0X006]]then else do Y_=OA[4];end;end;end;else do D_[OA[4]]=D_[OA[7]];end;end;else do for Aw=OA[4],OA[0x0007]do D_[Aw]=nil;end;end;end;end;else do if not(aA<35)then do if aA==36 then local zO=OA[0X4];local KO,XO,kO=D_[zO]();if KO then(D_)[zO+1]=XO;(D_)[zO+0X2]=kO;Y_=OA[7];end;else local Md=s_-FF;local yd=(OA[4]);if not(Md<0X0)then else Md=-1;end;for ME=yd,yd+Md do(D_)[ME]=M_[FF+(ME-yd)+0x001];end;u_=yd+Md;end;end;else do(D_)[OA[4]]=i(D_[OA[7]],D_[OA[0X6]]);end;end;end;end;else if not(aA<0X2B)then if aA<44 then(D_)[OA[4]]=D_[OA[7]]*D_[OA[6]];else do if aA~=0x2d then T_[OA[3]]=D_[OA[4]];else repeat local sg,wg=UF,(D_);if not(#sg>0)then else local ng=({});for Oc,wc in F,sg do do for pi,Xi in F,wc do if not(Xi[0X001]==wg and Xi[2]>=0)then else local Ul=(Xi[2]);if not ng[Ul]then ng[Ul]={wg[Ul]};end;do(Xi)[0X1]=ng[Ul];end;Xi[2]=0x01;end;end;end;end;end;until 0.7690608260357849;do return D_[OA[0X0004]];end;end;end;end;else if not(aA>=41)then do D_[OA[0X4]]=D_[OA[7]]~=D_[OA[6]];end;else if aA~=42 then if OA[6]==234 then Y_=Y_-1;(X1)[Y_]={[5]=13,[0X7]=(OA[0X7]-0x8e),[0x4]=(OA[4]-142)};else repeat local nA,fA=UF,(D_);if#nA>0X00000 then local Yl=({});for X4,H4 in F,nA do for TR,HR in F,H4 do if not(HR[1]==fA and HR[2]>=0X0)then else local dC=(HR[2]);if not Yl[dC]then Yl[dC]={fA[dC]};end;HR[0X1]=Yl[dC];HR[2]=1;end;end;end;end;until-0X00003dA0B6B5;local wO=OA[0x004];do return Y(D_,wO,wO+OA[7]-0X0002);end;end;else repeat local KL,hL=UF,(D_);if not(#KL>0X000)then else local vU={};do for RF,DF in F,KL do for T8,i8 in F,DF do if not(i8[0x1]==hL and i8[2]>=0X0)then else local lF=i8[2];if not vU[lF]then vU[lF]={hL[lF]};end;(i8)[0X1]=vU[lF];i8[0X2]=1;end;end;end;end;end;until-0x001023e443;return Y(D_,OA[4],u_);end;end;end;end;end;else if aA>=0X000B then if aA<17 then do if not(aA<0XE)then if aA>=15 then if aA~=16 then do D_[OA[4]]=D_[OA[0X7]]~=OA[2];end;else(D_)[OA[0X004]]=OA[0X3];end;else D_[OA[0X4]]=D_[OA[7]]<=D_[OA[0X6]];end;else do if not(aA<0XC)then do if aA==13 then if OA[0x006]~=0XF9 then D_[OA[0X4]]=#D_[OA[0X7]];else Y_=Y_-0X1;do X1[Y_]={[7]=(OA[7]-44),[4]=(OA[4]-44),[5]=35};end;end;else local Fj,Mj=AF[OA[0X7]],nil;local jj=Fj[2];local nj=(#jj);if nj>0x0 then Mj={};for vj=0X1,nj do local qj=(jj[vj]);if qj[1]==0 then(Mj)[vj-0X1]={D_,qj[2]};else(Mj)[vj-0X1]=P1[qj[2]];end;end;A(UF,Mj);end;do(D_)[OA[0X00004]]=C1(Mj,Fj,T_);end;end;end;else local J7=(OA[4]);D_[J7](Y(D_,J7+1,u_));do u_=J7-1;end;end;end;end;end;else if not(aA>=20)then if not(aA>=18)then local UE=OA[0X4];(D_)[UE]=D_[UE](D_[UE+0x1]);do u_=UE;end;else if aA==19 then do(D_[OA[4]])[D_[OA[0X7]]]=OA[2];end;elseif D_[OA[0x7]]<=D_[OA[6]]then Y_=OA[0X0004];end;end;else if not(aA<0X0015)then if aA~=22 then u_=OA[0X4];(D_[u_])();u_=u_-0X001;else(D_)[OA[4]]=nil;end;else D_[OA[4]]=D_[OA[7]]+D_[OA[6]];end;end;end;else do if aA<0X05 then do if aA>=2 then if aA>=3 then if aA==4 then D_[OA[4]][OA[0X3]]=D_[OA[6]];else D_[OA[0x00004]]=false;end;else(Z_)[OA[7]]=D_[OA[4]];end;else do if aA==0X1 then D_[OA[0X4]]=D_[OA[0X7]]^D_[OA[0X6]];else(D_)[OA[4]]=D_[OA[0x7]]%D_[OA[0X006]];end;end;end;end;elseif not(aA>=0X00008)then if aA>=0X6 then do if aA==0x07 then local C3=(OA[4]);(D_)[C3]=D_[C3](Y(D_,C3+0X1,u_));do u_=C3;end;else(D_)[OA[0x04]]={Y({},1,OA[7])};end;end;else local a0=OA[4];u_=a0+OA[0x007]-1;(D_[a0])(Y(D_,a0+0X1,u_));u_=a0-1;end;else if aA<0x09 then if D_[OA[0X00007]]==OA[2]then Y_=OA[0X4];end;else if aA==0XA then if D_[OA[7]]==D_[OA[0X6]]then else Y_=OA[0X04];end;else Y_=OA[0X7];end;end;end;end;end;end;end;end;end;end;x(MF,p1);return MF;end;local function a1()local Mr=({});local Xr,Kr,Tr,sr=2,nil,nil,(nil);do while Xr<=0X2 do do if Xr<=0 then do Tr={};end;do Xr=1;end;else do if Xr~=0X1 then do Kr={nil,u1,nil,nil,u1,nil,{},{},{}};end;Xr=0;else sr=0x0001;Xr=0x3;end;end;end;end;end;end;Xr=3;local kr=nil;do while true do if Xr<=0X1 then if Xr==0x0000 then for sS=1,X()do do(Tr)[sS]={d(),X()};end;end;do Xr=0x00001;end;else kr={};break;end;elseif Xr~=0X002 then(Kr)[0X0005]=X();Xr=2;else(Kr)[0X2]=Tr;do Xr=0X00000;end;end;end;end;Xr=0X1;local hr=(nil);repeat if not(Xr<=0)then if Xr~=0x1 then hr=f()-12018;break;else(Kr)[12]=f();Xr=0X000;do continue;end;end;else Kr[0x11]=d();Xr=2;end;until false;local Fr=(Kr[9]);Xr=0X06;local Br,Gr,Jr=nil,nil,(nil);repeat if not(Xr<=4)then if Xr<=6 then do if Xr==5 then Kr[O1]=d();do Xr=0x00008;end;continue;else for Dy=0X0,hr-1 do Fr[Dy]=a1();end;do Xr=5;end;end;end;elseif Xr<=0X07 then Kr[0X012]=f();do Xr=3;end;else if Xr~=0X8 then Kr[0X4]=X();do Xr=0X00007;end;continue;else(Kr)[v1]=X();Xr=0x1;continue;end;end;else do if Xr<=0X1 then if Xr==0 then do Gr=d();end;Xr=0x00004;else Br=f()-0x0014C17;Xr=0;end;elseif Xr<=0X2 then for vl=1,Br do local Pl,il,tl=nil,nil,nil;for F4=0x0,0X4 do if F4<=0X1 then if F4==0X0 then Pl=nil;continue;else do il=d();end;continue;end;else if not(F4<=0X002)then if F4==0X0003 then if il==95 then Pl=f();elseif il==0X00064 then Pl=R();elseif il==0X00D2 then Pl=R1;elseif il==0x9 then Pl=J1;elseif il==0X8 then Pl=a(Q1(Gr),d());elseif il==c1 then do Pl=v();end;elseif il==0X0A7 then Pl=v();elseif il==7 then Pl=a(Q1(Gr),0X14);elseif il==k1 then Pl=R();elseif il==0X23 then Pl=a(Q1(Gr),0X2);elseif il==0x49 then Pl=R()+f();elseif il==93 then Pl=v();elseif il==0X0000D4 then do Pl=R();end;end;continue;else tl={Pl,{}};do continue;end;end;else(Mr)[vl-0x1]=sr;end;end;end;kr[sr]=tl;sr=sr+1;if Jr then for q_=0,1 do if q_==0 then(Z1)[g1]=tl;continue;else g1=g1+0X1;do continue;end;end;end;end;end;Xr=0X00009;do continue;end;else if Xr~=0X3 then do Jr=d()~=0;end;Xr=0X0002;else Kr[U1]=d();Xr=0Xa;end;end;end;end;until Xr==10;do Xr=0x1;end;local Ur,Qr=nil,nil;repeat do if Xr<=3 then if Xr<=0X1 then if Xr~=0X0 then Ur=d();Xr=0;continue;else Kr[1]=O(Ur,1,A1)~=0;do Xr=0X04;end;end;else if Xr~=2 then(Kr)[13]=d();do Xr=0X8;end;else Kr[i1]=f();Xr=0X7;continue;end;end;elseif not(Xr<=0X5)then if Xr<=0X06 then(Kr)[11]=f();do Xr=2;end;else do if Xr~=0X7 then Kr[0X0d]=d();Xr=5;continue;else do Kr[0Xc]=f();end;Xr=3;end;end;end;else if Xr~=0X4 then Qr=f()-52516;Xr=0X009;continue;else Kr[t1]=O(Ur,0x2,1)~=0X0;Xr=0X6;continue;end;end;end;until Xr>8;local Nr=(Kr[0X7]);Xr=1;while Xr<=1 do if Xr~=0 then for hg=0x1,Qr do do Nr[hg]={[6]=P(),[5]='\C',[0X03]=d(),[0X2]=-0x5DEaC11A,[0X0004]=-0x3Fb9759,[7]=R1,[5]=X(),[0X7]=R1,[0x00002]=d(),[0x07]=P(),[4]=P(),[A1]=d()};end;end;Xr=0X0;continue;else for lt=1,Qr do local gt=Kr[0X7][lt];do for En,bn in T1(q)do local Dn,Mn=nil,nil;for zb=0x0000,0X0002 do do if zb<=0 then Dn=e[bn];else do if zb==1 then Mn=gt[Dn];continue;else if Mn==6 then local Ul,Sl=nil,(nil);local el=0;while el<0X3 do if not(el<=0)then if el~=1 then if Sl then local Py=nil;local Ty=0X1;repeat if not(Ty<=0)then if Ty==0X1 then do gt[Dn]=Sl[1];end;Ty=2;else do Py=Sl[0x2];end;do Ty=0;end;continue;end;else do(Py)[#Py+0X001]={gt,Dn};end;Ty=3;end;until Ty==0X3;end;el=3;continue;else Sl=kr[Ul];el=2;end;else Ul=Mr[gt[bn]];el=1;continue;end;end;else if Mn~=13 then else do(gt)[bn]=lt+gt[bn]+1;end;end;end;continue;end;end;end;end;end;end;end;end;do Xr=0x2;end;continue;end;end;return Kr;end;q1=2;local h1=nil;repeat do if q1<=0X0001 then if q1==0X0 then Z1=nil;q1=1;else return C1(u1,h1,l)(...);end;else if q1==2 then h1=a1();q1=0X3;else do m1[0X0001]=Z1;end;q1=0X0;continue;end;end;end;until(false);end)(bit32.lshift,unpack,1,error,getfenv,string.match,13,0X100,0,'\L\085\]\0350O\PM',38,select,true,setmetatable,0x000013,string.byte,bit32.rshift,assert,6,ipairs,4,3,string.char,bit32.bor,coroutine.yield,type,"y7\N\055\/\ n",false,next,18,table.insert,bit32.bnot,bit32,201,2,nil,string,{0XC8Ce,0X58953c,3197650616,3890538674,0X80B99cc5,2307702935,0X6d456671,1372144411,0X0000994AE915},...);
